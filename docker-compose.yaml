version: '3.7'
volumes:
  elastic-data:
  prometheus-data:
  grafana-data:

services:
  devbox-db:
    image: "${PGIMAGE}"
    ports:
      - "${PGHOSTPORT}:${PGPORT}"
    volumes:
    - "./pgdata:/data"
    environment:
      POSTGRES_USER:     "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      POSTGRES_DB:       "${PGDATABASE}"

  devbox:
    image: "${AIDBOX_IMAGE}"
    depends_on: ["devbox-db", "es", "apm-server"]
    links:
      - "devbox-db:database"
      - es:es
    ports:
      - "${AIDBOX_PORT}:${AIDBOX_PORT}"
    env_file:
      - .env
    environment:
      PGHOST: database
      AIDBOX_ES_URL: "http://es:9200/"
      AIDBOX_ES_BATCH_SIZE: 10
      AIDBOX_ES_BATCH_TIMEOUT: 5000
      AIDBOX_ES_INDEX_PAT: "'aidbox-logs'-yyyy-MM-dd"
      BOX_METRICS_PORT: 8889
      ELASTIC_APM_SERVER_URLS: "http://apm-server:8200"

  pushgateway:
    image: prom/pushgateway
    restart: unless-stopped
    ports:
      - 9091:9091

  prometheus:
    image: prom/prometheus:v2.30.3
    env_file:
      - .env
    environment:
      V: 'v5'
    ports:
      - 9090:9090
    volumes:
      - ./audit/prometheus/:/etc/prometheus/:cached
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - pushgateway

  es:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.13.2"
    volumes:
      - "elastic-data:/usr/share/elasticsearch/data"
    environment:
      - cluster.name=aidbox
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    depends_on:
      - "es"
    links:
      - "es:es"
    image: "docker.elastic.co/kibana/kibana:7.13.2"
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://es:9200"

  grafana:
    depends_on:
      - "es"
    links:
      - "es:es"
    environment:
      V: "v5"
    volumes:
      - "grafana-data:/var/lib/grafana"
      - "./audit/grafana/provisioning:/etc/grafana/provisioning"
    image: grafana/grafana:8.3.0
    ports:
      - 3000:3000
    user: "104"

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.13.4
    depends_on: ['es', 'kibana' ]
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    links:
      - "es:es"
    command: >
       apm-server -e
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["es:9200"]
